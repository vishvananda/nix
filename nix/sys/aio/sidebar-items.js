initSidebarItems({"enum":[["AioCancelStat","Return values for `aio_cancel`"],["AioFsyncMode","Mode for `aio_fsync`.  Controls whether only data or both data and metadata are synced."],["LioMode","Mode for `lio_listio`."],["LioOpcode","When used with `lio_listio`, determines whether a given `aiocb` should be used for a read operation, a write operation, or ignored.  Has no effect for any other aio functions."]],"fn":[["aio_cancel","Cancels outstanding AIO requests.  If `aiocb` is `None`, then all requests for `fd` will be cancelled.  Otherwise, only the given `AioCb` will be cancelled."],["aio_error","Retrieve error status of an asynchronous operation.  If the request has not yet completed, returns `EINPROGRESS`.  Otherwise, returns `Ok` or any other error."],["aio_fsync","An asynchronous version of `fsync`."],["aio_read","Asynchronously reads from a file descriptor into a buffer"],["aio_return","Retrieve return status of an asynchronous operation.  Should only be called once for each `AioCb`, after `aio_error` indicates that it has completed. The result the same as for `read`, `write`, of `fsync`."],["aio_suspend","Suspends the calling process until at least one of the specified `AioCb`s has completed, a signal is delivered, or the timeout has passed.  If `timeout` is `None`, `aio_suspend` will block indefinitely."],["aio_write","Asynchronously writes from a buffer to a file descriptor"],["lio_listio","Submits multiple asynchronous I/O requests with a single system call.  The order in which the requests are carried out is not specified."]],"struct":[["AioCb","The basic structure used by all aio functions.  Each `aiocb` represents one I/O request."]]});